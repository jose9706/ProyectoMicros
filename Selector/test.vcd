$date
	Sat Jun  8 12:21:27 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 12 ! sel_B [11:0] $end
$var wire 12 " sel_A [11:0] $end
$var wire 4 # SEL [3:0] $end
$var wire 1 $ RESET_L $end
$var wire 16 % NIBBLE_OUT [15:0] $end
$var wire 32 & DATA_B [31:0] $end
$var wire 32 ' DATA_A [31:0] $end
$var wire 1 ( CLK $end
$scope module pog $end
$var wire 12 ) sel_B [11:0] $end
$var wire 12 * sel_A [11:0] $end
$var wire 4 + SEL [3:0] $end
$var wire 1 $ RESET_L $end
$var wire 16 , NIBBLE_OUT [15:0] $end
$var wire 32 - DATA_B [31:0] $end
$var wire 32 . DATA_A [31:0] $end
$var wire 1 ( CLK $end
$scope begin outs[0] $end
$upscope $end
$scope begin outs[1] $end
$upscope $end
$scope begin outs[2] $end
$upscope $end
$scope begin outs[3] $end
$upscope $end
$scope begin selectores[0] $end
$scope module seli $end
$var wire 1 / sel $end
$var wire 3 0 selA [2:0] $end
$var wire 3 1 selB [2:0] $end
$var wire 1 $ reset_L $end
$var wire 32 2 dataB [31:0] $end
$var wire 32 3 dataA [31:0] $end
$var wire 1 ( clk $end
$var reg 4 4 nibbleOut [3:0] $end
$upscope $end
$upscope $end
$scope begin selectores[1] $end
$scope module seli $end
$var wire 1 5 sel $end
$var wire 3 6 selA [2:0] $end
$var wire 3 7 selB [2:0] $end
$var wire 1 $ reset_L $end
$var wire 32 8 dataB [31:0] $end
$var wire 32 9 dataA [31:0] $end
$var wire 1 ( clk $end
$var reg 4 : nibbleOut [3:0] $end
$upscope $end
$upscope $end
$scope begin selectores[2] $end
$scope module seli $end
$var wire 1 ; sel $end
$var wire 3 < selA [2:0] $end
$var wire 3 = selB [2:0] $end
$var wire 1 $ reset_L $end
$var wire 32 > dataB [31:0] $end
$var wire 32 ? dataA [31:0] $end
$var wire 1 ( clk $end
$var reg 4 @ nibbleOut [3:0] $end
$upscope $end
$upscope $end
$scope begin selectores[3] $end
$scope module seli $end
$var wire 1 A sel $end
$var wire 3 B selA [2:0] $end
$var wire 3 C selB [2:0] $end
$var wire 1 $ reset_L $end
$var wire 32 D dataB [31:0] $end
$var wire 32 E dataA [31:0] $end
$var wire 1 ( clk $end
$var reg 4 F nibbleOut [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module prob $end
$var reg 1 ( CLK $end
$var reg 32 G DATA_A [31:0] $end
$var reg 32 H DATA_B [31:0] $end
$var reg 1 $ RESET_L $end
$var reg 4 I SEL [3:0] $end
$var reg 12 J sel_A [11:0] $end
$var reg 12 K sel_B [11:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 K
b0 J
b0 I
b0 H
b0 G
bx F
b0 E
b0 D
b0 C
b0 B
0A
bx @
b0 ?
b0 >
b0 =
b0 <
0;
bx :
b0 9
b0 8
b0 7
b0 6
05
bx 4
b0 3
b0 2
b0 1
b0 0
0/
b0 .
b0 -
bx ,
b0 +
b0 *
b0 )
0(
b0 '
b0 &
bx %
0$
b0 #
b0 "
b0 !
$end
#2
b0 4
b0 :
b0 @
b0 %
b0 ,
b0 F
1$
1(
#4
0(
#6
15
1/
b11 C
b10 =
b1 7
b1 0
b11 #
b11 +
b11 I
b11010001000 !
b11010001000 )
b11010001000 K
b1 "
b1 *
b1 J
b1010101111001101 &
b1010101111001101 -
b1010101111001101 2
b1010101111001101 8
b1010101111001101 >
b1010101111001101 D
b1010101111001101 H
b111111111111 '
b111111111111 .
b111111111111 3
b111111111111 9
b111111111111 ?
b111111111111 E
b111111111111 G
1(
#8
0(
#10
b1101 4
b1100 :
b1111 @
b1111111111001101 %
b1111111111001101 ,
b1111 F
1(
#12
0(
#14
1(
#16
0(
#18
1(
#20
0(
#22
1(
#24
0(
#26
1(
