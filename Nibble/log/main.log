
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 61f6811, gcc 5.4.0-6ubuntu1~16.04.4 -O2 -fstack-protector-strong -fPIC -Os)

1. Executing Verilog-2005 frontend.
Parsing Verilog input from `nibble_top.v' to AST representation.
Generating RTLIL representation for module `\selector4'.
Generating RTLIL representation for module `\selector'.
Generating RTLIL representation for module `\nm2'.
Generating RTLIL representation for module `\nibble_top'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \nibble_top
Used module:     \nm2
Used module:     \selector4
Used module:         \selector

2.2. Analyzing design hierarchy..
Top module:  \nibble_top
Used module:     \nm2
Used module:     \selector4
Used module:         \selector
Removed 0 unused modules.
Mapping positional arguments of cell selector4.selectores[3].seli (selector).
Mapping positional arguments of cell selector4.selectores[2].seli (selector).
Mapping positional arguments of cell selector4.selectores[1].seli (selector).
Mapping positional arguments of cell selector4.selectores[0].seli (selector).

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.3. Executing PROC_INIT pass (extract init attributes).

3.4. Executing PROC_ARST pass (detect async resets in processes).

3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\nibble_top.$proc$nibble_top.v:50$17'.
     1/1: $0\DATA_OUT[3:0]
Creating decoders for process `\nm2.$proc$../nm2/nm2.v:39$14'.
     1/6: $0\nibble_D[3:0]
     2/6: $0\nibble_C[3:0]
     3/6: $0\nibble_B[3:0]
     4/6: $0\nibble_A[3:0]
     5/6: $0\ID_MAYOR[1:0]
     6/6: $0\NIBBLE_MAYOR[3:0]
Creating decoders for process `\nm2.$proc$../nm2/nm2.v:11$10'.
     1/12: $2\id2[1:0]
     2/12: $2\nib_l2[3:0]
     3/12: $2\id1[1:0]
     4/12: $2\nib_l1[3:0]
     5/12: $1\id2[1:0]
     6/12: $1\id1[1:0]
     7/12: $1\nib_l2[3:0]
     8/12: $1\nib_l1[3:0]
     9/12: $0\id2[1:0]
    10/12: $0\id1[1:0]
    11/12: $0\nib_l2[3:0]
    12/12: $0\nib_l1[3:0]
Creating decoders for process `\selector.$proc$../Selector/selector4.v:41$1'.
     1/1: $0\nibbleOut[3:0]

3.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\nm2.\nib_l1' from process `\nm2.$proc$../nm2/nm2.v:11$10'.
No latch inferred for signal `\nm2.\nib_l2' from process `\nm2.$proc$../nm2/nm2.v:11$10'.
No latch inferred for signal `\nm2.\id1' from process `\nm2.$proc$../nm2/nm2.v:11$10'.
No latch inferred for signal `\nm2.\id2' from process `\nm2.$proc$../nm2/nm2.v:11$10'.

3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\nibble_top.\DATA_OUT' using process `\nibble_top.$proc$nibble_top.v:50$17'.
  created $dff cell `$procdff$85' with positive edge clock.
Creating register for signal `\nm2.\NIBBLE_MAYOR' using process `\nm2.$proc$../nm2/nm2.v:39$14'.
  created $dff cell `$procdff$86' with positive edge clock.
Creating register for signal `\nm2.\ID_MAYOR' using process `\nm2.$proc$../nm2/nm2.v:39$14'.
  created $dff cell `$procdff$87' with positive edge clock.
Creating register for signal `\nm2.\nibble_A' using process `\nm2.$proc$../nm2/nm2.v:39$14'.
  created $dff cell `$procdff$88' with positive edge clock.
Creating register for signal `\nm2.\nibble_B' using process `\nm2.$proc$../nm2/nm2.v:39$14'.
  created $dff cell `$procdff$89' with positive edge clock.
Creating register for signal `\nm2.\nibble_C' using process `\nm2.$proc$../nm2/nm2.v:39$14'.
  created $dff cell `$procdff$90' with positive edge clock.
Creating register for signal `\nm2.\nibble_D' using process `\nm2.$proc$../nm2/nm2.v:39$14'.
  created $dff cell `$procdff$91' with positive edge clock.
Creating register for signal `\selector.\nibbleOut' using process `\selector.$proc$../Selector/selector4.v:41$1'.
  created $dff cell `$procdff$92' with positive edge clock.

3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\nibble_top.$proc$nibble_top.v:50$17'.
Removing empty process `nibble_top.$proc$nibble_top.v:50$17'.
Found and cleaned up 2 empty switches in `\nm2.$proc$../nm2/nm2.v:39$14'.
Removing empty process `nm2.$proc$../nm2/nm2.v:39$14'.
Found and cleaned up 3 empty switches in `\nm2.$proc$../nm2/nm2.v:11$10'.
Removing empty process `nm2.$proc$../nm2/nm2.v:11$10'.
Found and cleaned up 1 empty switch in `\selector.$proc$../Selector/selector4.v:41$1'.
Removing empty process `selector.$proc$../Selector/selector4.v:41$1'.
Cleaned up 7 empty switches.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $mux cell `$procmux$20' in module `nibble_top'.
Optimizing away select inverter for $mux cell `$procmux$23' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$56' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$77' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$68' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$80' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$26' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$29' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$32' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$50' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$71' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$62' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$74' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$38' in module `nm2'.
Optimizing away select inverter for $mux cell `$procmux$44' in module `nm2'.
Replacing multiply-by-4 cell `$mul$../Selector/selector4.v:45$3' in module `\selector' with shift-by-2.
Replacing $add cell `$add$../Selector/selector4.v:45$4' in module `\selector' with identity for port A.
Replacing multiply-by-4 cell `$mul$../Selector/selector4.v:45$6' in module `\selector' with shift-by-2.
Replacing $add cell `$add$../Selector/selector4.v:45$7' in module `\selector' with identity for port A.
Optimizing away select inverter for $mux cell `$procmux$83' in module `selector'.
Replacing $shl cell `$mul$../Selector/selector4.v:45$3' (B=2'10, SHR=-2) in module `selector' with fixed wiring: { 27'000000000000000000000000000 \selB 2'00 }
Replacing $shl cell `$mul$../Selector/selector4.v:45$6' (B=2'10, SHR=-2) in module `selector' with fixed wiring: { 27'000000000000000000000000000 \selA 2'00 }

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Finding identical cells in module `\nm2'.
  Cell `$not$../nm2/nm2.v:16$11' is identical to cell `$not$../nm2/nm2.v:40$15'.
    Redirecting output \Y: $not$../nm2/nm2.v:16$11_Y = $not$../nm2/nm2.v:40$15_Y
    Removing $not cell `$not$../nm2/nm2.v:16$11' from module `\nm2'.
Finding identical cells in module `\selector'.
Finding identical cells in module `\selector4'.
Removed a total of 1 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nibble_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$20 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \nm2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$80 (pure)
    Root of a mux tree: $procmux$77 (pure)
    Root of a mux tree: $procmux$44 (pure)
    Root of a mux tree: $procmux$38 (pure)
    Root of a mux tree: $procmux$32 (pure)
    Root of a mux tree: $procmux$29 (pure)
    Root of a mux tree: $procmux$26 (pure)
    Root of a mux tree: $procmux$23 (pure)
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$74.
    dead port 2/2 on $mux $procmux$71.
    dead port 2/2 on $mux $procmux$68.
    dead port 2/2 on $mux $procmux$62.
    dead port 2/2 on $mux $procmux$56.
    dead port 2/2 on $mux $procmux$50.
Running muxtree optimizer on module \selector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$83 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \selector4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 6 multiplexer ports.

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nibble_top.
  Optimizing cells in module \nm2.
  Optimizing cells in module \selector.
  Optimizing cells in module \selector4.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Finding identical cells in module `\nm2'.
Finding identical cells in module `\selector'.
Finding identical cells in module `\selector4'.
Removed a total of 0 cells.

4.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..
  removing unused `$not' cell `$not$nibble_top.v:51$18'.
Finding unused cells or wires in module \nm2..
  removing unused `$not' cell `$not$../nm2/nm2.v:40$15'.
Finding unused cells or wires in module \selector..
  removing buffer cell `$add$../Selector/selector4.v:45$7': $add$../Selector/selector4.v:45$7_Y = $mul$../Selector/selector4.v:45$6_Y
  removing buffer cell `$add$../Selector/selector4.v:45$4': $add$../Selector/selector4.v:45$4_Y = $mul$../Selector/selector4.v:45$3_Y
  removing unused `$not' cell `$not$../Selector/selector4.v:42$2'.
Finding unused cells or wires in module \selector4..

4.8. Executing OPT_EXPR pass (perform const folding).

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nibble_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$20 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \nm2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$23 (pure)
    Root of a mux tree: $procmux$26 (pure)
    Root of a mux tree: $procmux$29 (pure)
    Root of a mux tree: $procmux$32 (pure)
    Root of a mux tree: $procmux$38 (pure)
    Root of a mux tree: $procmux$44 (pure)
    Root of a mux tree: $procmux$77 (pure)
    Root of a mux tree: $procmux$80 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \selector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$83 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \selector4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nibble_top.
  Optimizing cells in module \nm2.
  Optimizing cells in module \selector.
  Optimizing cells in module \selector4.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Finding identical cells in module `\nm2'.
Finding identical cells in module `\selector'.
Finding identical cells in module `\selector4'.
Removed a total of 0 cells.

4.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..
Finding unused cells or wires in module \nm2..
Finding unused cells or wires in module \selector..
Finding unused cells or wires in module \selector4..

4.15. Executing OPT_EXPR pass (perform const folding).

4.16. Finished OPT passes. (There is nothing left to do.)

5. Executing FSM pass (extract and optimize FSM).

5.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking nm2.ID_MAYOR as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

5.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..
Finding unused cells or wires in module \nm2..
Finding unused cells or wires in module \selector..
Finding unused cells or wires in module \selector4..

5.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6. Executing OPT pass (performing simple optimizations).

6.1. Executing OPT_EXPR pass (perform const folding).

6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Finding identical cells in module `\nm2'.
Finding identical cells in module `\selector'.
Finding identical cells in module `\selector4'.
Removed a total of 0 cells.

6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nibble_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$20 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \nm2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$23 (pure)
    Root of a mux tree: $procmux$26 (pure)
    Root of a mux tree: $procmux$29 (pure)
    Root of a mux tree: $procmux$32 (pure)
    Root of a mux tree: $procmux$38 (pure)
    Root of a mux tree: $procmux$44 (pure)
    Root of a mux tree: $procmux$77 (pure)
    Root of a mux tree: $procmux$80 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \selector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$83 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \selector4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nibble_top.
  Optimizing cells in module \nm2.
  Optimizing cells in module \selector.
  Optimizing cells in module \selector4.
Performed a total of 0 changes.

6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Finding identical cells in module `\nm2'.
Finding identical cells in module `\selector'.
Finding identical cells in module `\selector4'.
Removed a total of 0 cells.

6.6. Executing OPT_RMDFF pass (remove dff with constant values).

6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..
Finding unused cells or wires in module \nm2..
Finding unused cells or wires in module \selector..
Finding unused cells or wires in module \selector4..

6.8. Executing OPT_EXPR pass (perform const folding).

6.9. Finished OPT passes. (There is nothing left to do.)

7. Executing MEMORY pass.

7.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

7.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..
Finding unused cells or wires in module \nm2..
Finding unused cells or wires in module \selector..
Finding unused cells or wires in module \selector4..

7.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..
Finding unused cells or wires in module \nm2..
Finding unused cells or wires in module \selector..
Finding unused cells or wires in module \selector4..

7.5. Executing MEMORY_COLLECT pass (generating $mem cells).

7.6. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

8. Executing OPT pass (performing simple optimizations).

8.1. Executing OPT_EXPR pass (perform const folding).

8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Finding identical cells in module `\nm2'.
Finding identical cells in module `\selector'.
Finding identical cells in module `\selector4'.
Removed a total of 0 cells.

8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nibble_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$20 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \nm2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$23 (pure)
    Root of a mux tree: $procmux$26 (pure)
    Root of a mux tree: $procmux$29 (pure)
    Root of a mux tree: $procmux$32 (pure)
    Root of a mux tree: $procmux$38 (pure)
    Root of a mux tree: $procmux$44 (pure)
    Root of a mux tree: $procmux$77 (pure)
    Root of a mux tree: $procmux$80 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \selector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$83 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \selector4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nibble_top.
  Optimizing cells in module \nm2.
  Optimizing cells in module \selector.
  Optimizing cells in module \selector4.
Performed a total of 0 changes.

8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Finding identical cells in module `\nm2'.
Finding identical cells in module `\selector'.
Finding identical cells in module `\selector4'.
Removed a total of 0 cells.

8.6. Executing OPT_RMDFF pass (remove dff with constant values).

8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..
Finding unused cells or wires in module \nm2..
Finding unused cells or wires in module \selector..
Finding unused cells or wires in module \selector4..

8.8. Executing OPT_EXPR pass (perform const folding).

8.9. Finished OPT passes. (There is nothing left to do.)

9. Executing TECHMAP pass (map to technology primitives).

9.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_shift_shiftx'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 1
Parameter \A_WIDTH = 32
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 4
Parameter \_TECHMAP_CELLTYPE_ = 56'00100100011100110110100001101001011001100111010001111000
Generating RTLIL representation for module `$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx'.

9.3. Executing PROC pass (convert processes to netlists).

9.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 14 empty switches in `$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx.$proc$<techmap.v>:145$169'.
Cleaned up 14 empty switches.

9.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

9.3.3. Executing PROC_INIT pass (extract init attributes).

9.3.4. Executing PROC_ARST pass (detect async resets in processes).

9.3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx.$proc$<techmap.v>:145$169'.
     1/51: $2\buffer[95:0]
     2/51: $27\overflow[0:0]
     3/51: $26\overflow[0:0]
     4/51: $25\overflow[0:0]
     5/51: $24\overflow[0:0]
     6/51: $23\overflow[0:0]
     7/51: $22\overflow[0:0]
     8/51: $21\overflow[0:0]
     9/51: $20\overflow[0:0]
    10/51: $19\overflow[0:0]
    11/51: $18\overflow[0:0]
    12/51: $17\overflow[0:0]
    13/51: $16\overflow[0:0]
    14/51: $15\overflow[0:0]
    15/51: $14\overflow[0:0]
    16/51: $13\overflow[0:0]
    17/51: $12\overflow[0:0]
    18/51: $11\overflow[0:0]
    19/51: $10\overflow[0:0]
    20/51: $9\overflow[0:0]
    21/51: $8\overflow[0:0]
    22/51: $7\overflow[0:0]
    23/51: $6\overflow[0:0]
    24/51: $5\overflow[0:0]
    25/51: $4\overflow[0:0]
    26/51: $3\overflow[0:0]
    27/51: $2\overflow[0:0]
    28/51: $22\buffer[95:0]
    29/51: $21\buffer[95:0]
    30/51: $20\buffer[95:0]
    31/51: $19\buffer[95:0]
    32/51: $18\buffer[95:0]
    33/51: $17\buffer[95:0]
    34/51: $16\buffer[95:0]
    35/51: $15\buffer[95:0]
    36/51: $14\buffer[95:0]
    37/51: $13\buffer[95:0]
    38/51: $12\buffer[95:0]
    39/51: $11\buffer[95:0]
    40/51: $10\buffer[95:0]
    41/51: $9\buffer[95:0]
    42/51: $8\buffer[95:0]
    43/51: $7\buffer[95:0]
    44/51: $6\buffer[95:0]
    45/51: $5\buffer[95:0]
    46/51: $4\buffer[95:0]
    47/51: $3\buffer[95:0]
    48/51: $1\buffer[95:0]
    49/51: $1\overflow[0:0]
    50/51: $0\buffer[95:0]
    51/51: $0\overflow[0:0]

9.3.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx.\buffer' from process `$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx.$proc$<techmap.v>:145$169'.
No latch inferred for signal `$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx.\overflow' from process `$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx.$proc$<techmap.v>:145$169'.

9.3.7. Executing PROC_DFF pass (convert process syncs to FFs).

9.3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 34 empty switches in `$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx.$proc$<techmap.v>:145$169'.
Removing empty process `$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx.$proc$<techmap.v>:145$169'.
Cleaned up 34 empty switches.
Removed 0 unused cells and 100 unused wires.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port B: 1'0
  Constant input on bit 1 of port B: 1'0
  Constant input on bit 5 of port B: 1'0
  Constant input on bit 6 of port B: 1'0
  Constant input on bit 7 of port B: 1'0
  Constant input on bit 8 of port B: 1'0
  Constant input on bit 9 of port B: 1'0
  Constant input on bit 10 of port B: 1'0
  Constant input on bit 11 of port B: 1'0
  Constant input on bit 12 of port B: 1'0
  Constant input on bit 13 of port B: 1'0
  Constant input on bit 14 of port B: 1'0
  Constant input on bit 15 of port B: 1'0
  Constant input on bit 16 of port B: 1'0
  Constant input on bit 17 of port B: 1'0
  Constant input on bit 18 of port B: 1'0
  Constant input on bit 19 of port B: 1'0
  Constant input on bit 20 of port B: 1'0
  Constant input on bit 21 of port B: 1'0
  Constant input on bit 22 of port B: 1'0
  Constant input on bit 23 of port B: 1'0
  Constant input on bit 24 of port B: 1'0
  Constant input on bit 25 of port B: 1'0
  Constant input on bit 26 of port B: 1'0
  Constant input on bit 27 of port B: 1'0
  Constant input on bit 28 of port B: 1'0
  Constant input on bit 29 of port B: 1'0
  Constant input on bit 30 of port B: 1'0
  Constant input on bit 31 of port B: 1'0
Creating constmapped module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx'.

9.4. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$357
    Root of a mux tree: $procmux$351
    Root of a mux tree: $procmux$342
    Root of a mux tree: $procmux$333
      Removing pure flag from root mux $procmux$196.
    Root of a mux tree: $procmux$324
      Removing pure flag from root mux $procmux$357.
    Root of a mux tree: $procmux$315
      Removing pure flag from root mux $procmux$351.
    Root of a mux tree: $procmux$306 (pure)
      Removing pure flag from root mux $procmux$342.
    Root of a mux tree: $procmux$199 (pure)
    Root of a mux tree: $procmux$196 (pure)
    Root of a mux tree: $procmux$351 (rerun as non-pure)
    Root of a mux tree: $procmux$357 (rerun as non-pure)
    Root of a mux tree: $procmux$342 (rerun as non-pure)
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$357.
    dead port 1/2 on $mux $procmux$354.
    dead port 2/2 on $mux $procmux$354.
    dead port 1/2 on $mux $procmux$351.
    dead port 1/2 on $mux $procmux$348.
    dead port 2/2 on $mux $procmux$348.
    dead port 1/2 on $mux $procmux$345.
    dead port 2/2 on $mux $procmux$345.
    dead port 2/2 on $mux $procmux$339.
    dead port 2/2 on $mux $procmux$336.
    dead port 2/2 on $mux $procmux$330.
    dead port 2/2 on $mux $procmux$327.
    dead port 2/2 on $mux $procmux$321.
    dead port 2/2 on $mux $procmux$318.
    dead port 1/2 on $mux $procmux$315.
    dead port 1/2 on $mux $procmux$312.
    dead port 2/2 on $mux $procmux$312.
    dead port 1/2 on $mux $procmux$309.
    dead port 2/2 on $mux $procmux$309.
    dead port 1/2 on $mux $procmux$306.
    dead port 1/2 on $mux $procmux$303.
    dead port 2/2 on $mux $procmux$303.
    dead port 1/2 on $mux $procmux$300.
    dead port 2/2 on $mux $procmux$300.
Removed 24 multiplexer ports.

9.5. Executing OPT_EXPR pass (perform const folding).
Replacing $ne cell `$ne$<techmap.v>:153$170' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$170_Y = $auto$techmap.cc:737:techmap_module$359 [7]'.
Replacing $ne cell `$ne$<techmap.v>:153$171' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$171_Y = $auto$techmap.cc:737:techmap_module$359 [8]'.
Replacing $ne cell `$ne$<techmap.v>:153$172' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$172_Y = $auto$techmap.cc:737:techmap_module$359 [9]'.
Replacing $ne cell `$ne$<techmap.v>:153$173' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$173_Y = $auto$techmap.cc:737:techmap_module$359 [10]'.
Replacing $ne cell `$ne$<techmap.v>:153$174' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$174_Y = $auto$techmap.cc:737:techmap_module$359 [11]'.
Replacing $ne cell `$ne$<techmap.v>:153$175' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$175_Y = $auto$techmap.cc:737:techmap_module$359 [12]'.
Replacing $ne cell `$ne$<techmap.v>:153$176' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$176_Y = $auto$techmap.cc:737:techmap_module$359 [13]'.
Replacing $ne cell `$ne$<techmap.v>:153$177' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$177_Y = $auto$techmap.cc:737:techmap_module$359 [14]'.
Replacing $ne cell `$ne$<techmap.v>:153$178' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$178_Y = $auto$techmap.cc:737:techmap_module$359 [15]'.
Replacing $ne cell `$ne$<techmap.v>:153$179' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$179_Y = $auto$techmap.cc:737:techmap_module$359 [16]'.
Replacing $ne cell `$ne$<techmap.v>:153$180' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$180_Y = $auto$techmap.cc:737:techmap_module$359 [17]'.
Replacing $ne cell `$ne$<techmap.v>:153$181' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$181_Y = $auto$techmap.cc:737:techmap_module$359 [18]'.
Replacing $ne cell `$ne$<techmap.v>:153$182' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$182_Y = $auto$techmap.cc:737:techmap_module$359 [19]'.
Replacing $ne cell `$ne$<techmap.v>:153$183' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$183_Y = $auto$techmap.cc:737:techmap_module$359 [20]'.
Replacing $ne cell `$ne$<techmap.v>:153$184' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$184_Y = $auto$techmap.cc:737:techmap_module$359 [21]'.
Replacing $ne cell `$ne$<techmap.v>:153$185' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$185_Y = $auto$techmap.cc:737:techmap_module$359 [22]'.
Replacing $ne cell `$ne$<techmap.v>:153$186' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$186_Y = $auto$techmap.cc:737:techmap_module$359 [23]'.
Replacing $ne cell `$ne$<techmap.v>:153$187' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$187_Y = $auto$techmap.cc:737:techmap_module$359 [24]'.
Replacing $ne cell `$ne$<techmap.v>:153$188' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$188_Y = $auto$techmap.cc:737:techmap_module$359 [25]'.
Replacing $ne cell `$ne$<techmap.v>:153$189' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$189_Y = $auto$techmap.cc:737:techmap_module$359 [26]'.
Replacing $ne cell `$ne$<techmap.v>:153$190' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$190_Y = $auto$techmap.cc:737:techmap_module$359 [27]'.
Replacing $ne cell `$ne$<techmap.v>:153$191' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$191_Y = $auto$techmap.cc:737:techmap_module$359 [28]'.
Replacing $ne cell `$ne$<techmap.v>:153$192' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$192_Y = $auto$techmap.cc:737:techmap_module$359 [29]'.
Replacing $ne cell `$ne$<techmap.v>:153$193' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$193_Y = $auto$techmap.cc:737:techmap_module$359 [30]'.
Replacing $ne cell `$ne$<techmap.v>:153$194' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$ne$<techmap.v>:153$194_Y = $auto$techmap.cc:737:techmap_module$359 [31]'.
Replacing $mux cell `$procmux$295' (mux_bool) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$3\overflow[0:0] = $ne$<techmap.v>:153$170_Y'.
Replacing $mux cell `$procmux$291' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$4\overflow[0:0] = $3\overflow[0:0]'.
Replacing $mux cell `$procmux$287' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$5\overflow[0:0] = $4\overflow[0:0]'.
Replacing $mux cell `$procmux$283' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$6\overflow[0:0] = $5\overflow[0:0]'.
Replacing $mux cell `$procmux$279' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$7\overflow[0:0] = $6\overflow[0:0]'.
Replacing $mux cell `$procmux$275' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$8\overflow[0:0] = $7\overflow[0:0]'.
Replacing $mux cell `$procmux$271' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$9\overflow[0:0] = $8\overflow[0:0]'.
Replacing $mux cell `$procmux$267' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$10\overflow[0:0] = $9\overflow[0:0]'.
Replacing $mux cell `$procmux$263' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$11\overflow[0:0] = $10\overflow[0:0]'.
Replacing $mux cell `$procmux$259' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$12\overflow[0:0] = $11\overflow[0:0]'.
Replacing $mux cell `$procmux$255' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$13\overflow[0:0] = $12\overflow[0:0]'.
Replacing $mux cell `$procmux$251' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$14\overflow[0:0] = $13\overflow[0:0]'.
Replacing $mux cell `$procmux$247' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$15\overflow[0:0] = $14\overflow[0:0]'.
Replacing $mux cell `$procmux$243' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$16\overflow[0:0] = $15\overflow[0:0]'.
Replacing $mux cell `$procmux$239' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$17\overflow[0:0] = $16\overflow[0:0]'.
Replacing $mux cell `$procmux$235' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$18\overflow[0:0] = $17\overflow[0:0]'.
Replacing $mux cell `$procmux$231' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$19\overflow[0:0] = $18\overflow[0:0]'.
Replacing $mux cell `$procmux$227' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$20\overflow[0:0] = $19\overflow[0:0]'.
Replacing $mux cell `$procmux$223' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$21\overflow[0:0] = $20\overflow[0:0]'.
Replacing $mux cell `$procmux$219' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$22\overflow[0:0] = $21\overflow[0:0]'.
Replacing $mux cell `$procmux$215' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$23\overflow[0:0] = $22\overflow[0:0]'.
Replacing $mux cell `$procmux$211' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$24\overflow[0:0] = $23\overflow[0:0]'.
Replacing $mux cell `$procmux$207' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$25\overflow[0:0] = $24\overflow[0:0]'.
Replacing $mux cell `$procmux$203' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$26\overflow[0:0] = $25\overflow[0:0]'.
Replacing $mux cell `$procmux$199' (0) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `\overflow = $26\overflow[0:0]'.
Replacing $mux cell `$procmux$196' (mux_empty) in module `$paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx' with constant driver `$1\buffer[95:0] = { 64'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx $auto$techmap.cc:737:techmap_module$360 }'.
Removed 0 unused cells and 69 unused wires.

9.6. Continuing TECHMAP pass.
Mapping selector.$shiftx$../Selector/selector4.v:45$5 using $paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx.
Mapping selector.$shiftx$../Selector/selector4.v:45$8 using $paramod$constmap:ed3f69dd1783583a66e02ed4421f26c858fbc82b$paramod$d23c84dcaf7fd2e7708123bded81c614ee538df0\_90_shift_shiftx.
Mapping selector.$ternary$../Selector/selector4.v:45$9 ($mux) with simplemap.
Mapping selector.$procmux$83 ($mux) with simplemap.
Mapping selector.$procdff$92 ($dff) with simplemap.
Mapping selector.$techmap$shiftx$../Selector/selector4.v:45$8.$procmux$342 ($mux) with simplemap.
Mapping selector.$techmap$shiftx$../Selector/selector4.v:45$8.$procmux$324 ($mux) with simplemap.
Mapping selector.$techmap$shiftx$../Selector/selector4.v:45$8.$procmux$333 ($mux) with simplemap.
Mapping selector.$techmap$shiftx$../Selector/selector4.v:45$5.$procmux$342 ($mux) with simplemap.
Mapping selector.$techmap$shiftx$../Selector/selector4.v:45$5.$procmux$324 ($mux) with simplemap.
Mapping selector.$techmap$shiftx$../Selector/selector4.v:45$5.$procmux$333 ($mux) with simplemap.
Mapping nm2.$procmux$23 ($mux) with simplemap.
Running "alumacc" on wrapper $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.

9.7. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47:
  creating $alu model for $ge ($ge): new $alu
  creating $alu cell for $ge: $auto$alumacc.cc:470:replace_alu$954
  created 1 $alu and 0 $macc cells.

9.8. Continuing TECHMAP pass.
Mapping nm2.$ge$../nm2/nm2.v:22$12 using $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping nm2.$ge$../nm2/nm2.v:29$13 using $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping nm2.$ge$../nm2/nm2.v:53$16 using $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Mapping nm2.$procmux$26 ($mux) with simplemap.
Mapping nm2.$procmux$29 ($mux) with simplemap.
Mapping nm2.$procmux$32 ($mux) with simplemap.
Mapping nm2.$procmux$35 ($mux) with simplemap.
Mapping nm2.$procmux$38 ($mux) with simplemap.
Mapping nm2.$procmux$41 ($mux) with simplemap.
Mapping nm2.$procmux$44 ($mux) with simplemap.
Mapping nm2.$procmux$47 ($mux) with simplemap.
Mapping nm2.$procmux$53 ($mux) with simplemap.
Mapping nm2.$procmux$59 ($mux) with simplemap.
Mapping nm2.$procmux$65 ($mux) with simplemap.
Mapping nm2.$procmux$77 ($mux) with simplemap.
Mapping nm2.$procmux$80 ($mux) with simplemap.
Mapping nm2.$procdff$86 ($dff) with simplemap.
Mapping nm2.$procdff$87 ($dff) with simplemap.
Mapping nm2.$procdff$88 ($dff) with simplemap.
Mapping nm2.$procdff$89 ($dff) with simplemap.
Mapping nm2.$procdff$90 ($dff) with simplemap.
Mapping nm2.$procdff$91 ($dff) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:58:get_gt$963 ($not) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:58:get_gt$961 ($or) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:78:get_cf$959 ($not) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:64:get_eq$957 ($reduce_and) with simplemap.

9.9. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 4
Parameter \B_WIDTH = 4
Parameter \Y_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4'.

9.10. Continuing TECHMAP pass.
Mapping nm2.$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4.
Mapping nm2.$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:502:replace_alu$965 ($reduce_or) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:58:get_gt$963 ($not) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:58:get_gt$961 ($or) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:78:get_cf$959 ($not) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:64:get_eq$957 ($reduce_and) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4.
Mapping nm2.$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:502:replace_alu$965 ($reduce_or) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:58:get_gt$963 ($not) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:58:get_gt$961 ($or) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:78:get_cf$959 ($not) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:64:get_eq$957 ($reduce_and) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4.
Mapping nm2.$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:502:replace_alu$965 ($reduce_or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:263$1045 ($xor) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:262$1044 ($xor) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$and$<techmap.v>:260$1043 ($and) with simplemap.

9.11. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=4'.

9.12. Executing PROC pass (convert processes to netlists).

9.12.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9.12.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

9.12.3. Executing PROC_INIT pass (extract init attributes).

9.12.4. Executing PROC_ARST pass (detect async resets in processes).

9.12.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$1089'.
     1/8: $0\p[3:0] [2]
     2/8: $0\g[3:0] [2]
     3/8: $0\p[3:0] [3]
     4/8: $0\g[3:0] [3]
     5/8: $0\p[3:0] [1]
     6/8: $0\g[3:0] [1]
     7/8: $0\g[3:0] [0]
     8/8: $0\p[3:0] [0]

9.12.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=4.\g' from process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$1089'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=4.\p' from process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$1089'.

9.12.7. Executing PROC_DFF pass (convert process syncs to FFs).

9.12.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$1089'.
Cleaned up 0 empty switches.

9.13. Executing OPT pass (performing simple optimizations).

9.13.1. Executing OPT_EXPR pass (perform const folding).

9.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=4'.
Removed a total of 0 cells.

9.13.3. Executing OPT_RMDFF pass (remove dff with constant values).

9.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=4..
  removing unused `$and' cell `$and$<techmap.v>:222$1094'.
  removing unused `$and' cell `$and$<techmap.v>:222$1100'.
  removing unused `$and' cell `$and$<techmap.v>:230$1103'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

9.13.5. Finished fast OPT passes.

9.14. Continuing TECHMAP pass.
Mapping nm2.$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042 ($mux) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041 ($not) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.B_conv ($pos) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.A_conv ($pos) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:263$1045 ($xor) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:262$1044 ($xor) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$and$<techmap.v>:260$1043 ($and) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042 ($mux) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041 ($not) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.B_conv ($pos) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.A_conv ($pos) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:263$1045 ($xor) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:262$1044 ($xor) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$and$<techmap.v>:260$1043 ($and) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042 ($mux) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041 ($not) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.B_conv ($pos) with simplemap.
Mapping nm2.$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.A_conv ($pos) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:221$1095 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:221$1092 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:212$1090 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:229$1102 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:221$1099 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:221$1096 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:221$1093 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:212$1091 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:229$1101 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:222$1097 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:221$1098 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:221$1095 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:221$1092 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:212$1090 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:221$1098 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:222$1097 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:229$1101 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:212$1091 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:221$1093 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:221$1096 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:221$1099 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:229$1102 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:212$1090 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:221$1092 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:221$1095 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:221$1098 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:222$1097 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:229$1101 ($and) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:212$1091 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:221$1093 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:221$1096 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:221$1099 ($or) with simplemap.
Mapping nm2.$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$or$<techmap.v>:229$1102 ($or) with simplemap.
Mapping nibble_top.$procmux$20 ($mux) with simplemap.
Mapping nibble_top.$procdff$85 ($dff) with simplemap.
No more expansions possible.

10. Executing OPT pass (performing simple optimizations).

10.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1126' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [1] = $techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1125' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [0] = $techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1128' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [3] = $techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1127' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [2] = $techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1156' (?1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:212$1090_Y = $techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:262$1044_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1116' (0?) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:263$1045_Y [4] = $techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:484:replace_alu$956 [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$992' (11?) in module `\nm2' with constant driver `\id2 [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1107' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [3] = $techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1106' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [2] = $techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1105' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [1] = $techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1104' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [0] = $techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1167' (?1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:212$1090_Y = $techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:262$1044_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$998' (00?) in module `\nm2' with constant driver `\id1 [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1148' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [2] = $techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1149' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [3] = $techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1147' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [1] = $techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1146' (??1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$ternary$<techmap.v>:258$1042_Y [0] = $techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$not$<techmap.v>:258$1041_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1176' (?1) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:212$1090_Y = $techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:262$1044_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1072' (0?) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:263$1045_Y [4] = $techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:484:replace_alu$956 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1137' (0?) in module `\nm2' with constant driver `$techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.$xor$<techmap.v>:263$1045_Y [4] = $techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:484:replace_alu$956 [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$432' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [51] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$431' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [50] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$430' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [49] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$429' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [48] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$428' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [47] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$427' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [46] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$425' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [44] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$426' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [45] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$423' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [42] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$424' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [43] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$421' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [40] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$422' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [41] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$419' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [38] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$420' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [39] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$417' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [36] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$418' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [37] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$415' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [34] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$416' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [35] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$413' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [32] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$414' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [33] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$411' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [30] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$412' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [31] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$409' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [28] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$410' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [29] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$407' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [26] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$408' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [27] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$405' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [24] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$406' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [25] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$433' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [52] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$434' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [53] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$435' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [54] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$436' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [55] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$437' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [56] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$438' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [57] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$439' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [58] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$440' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [59] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$441' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [60] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$442' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [61] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$443' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [62] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$444' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [63] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$445' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [64] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$446' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [65] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$447' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [66] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$448' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [67] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$449' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [68] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$450' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [69] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$451' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [70] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$452' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [71] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$453' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [72] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$454' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [73] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$455' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [74] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$456' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [75] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$457' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [76] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$458' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [77] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$459' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [78] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$460' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [79] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$461' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [80] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$462' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [81] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$463' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [82] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$464' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [83] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$465' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [84] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$466' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [85] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$467' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [86] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$468' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$12\buffer[95:0] [87] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$597' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [32] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$598' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [33] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$599' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [34] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$600' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [35] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$601' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [36] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$501' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [32] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$602' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [37] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$502' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [33] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$603' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [38] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$503' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [34] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$604' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [39] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$504' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [35] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$605' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [40] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$505' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [36] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$606' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [41] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$506' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [37] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$607' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [42] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$507' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [38] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$608' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [43] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$508' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [39] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$609' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [44] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$509' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [40] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$610' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [45] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$510' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [41] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$611' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [46] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$511' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [42] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$612' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [47] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$512' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [43] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$613' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [48] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$513' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [44] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$614' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [49] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$514' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [45] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$615' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [50] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$515' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [46] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$616' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [51] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$516' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [47] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$617' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [52] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$517' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [48] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$618' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [53] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$518' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [49] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$619' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [54] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$519' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [50] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$620' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [55] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$520' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [51] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$621' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [56] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$521' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [52] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$622' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [57] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$522' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [53] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$623' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [58] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$523' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [54] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$624' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [59] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$524' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [55] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$625' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [60] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$525' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [56] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$626' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [61] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$526' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [57] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$627' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [62] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$527' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [58] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$628' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [63] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$528' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [59] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$629' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [64] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$529' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [60] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$630' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [65] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$530' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [61] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$631' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [66] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$531' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [62] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$632' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [67] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$532' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [63] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$633' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [68] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$533' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [64] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$634' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [69] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$534' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [65] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$635' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [70] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$535' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [66] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$636' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [71] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$536' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [67] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$637' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [72] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$537' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [68] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$638' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [73] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$538' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [69] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$639' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [74] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$539' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [70] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$640' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [75] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$540' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [71] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$641' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [76] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$541' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [72] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$642' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [77] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$542' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [73] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$643' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [78] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$543' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [74] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$644' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [79] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$544' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [75] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$645' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [80] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$545' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [76] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$646' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [81] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$546' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [77] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$647' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [82] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$547' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [78] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$648' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [83] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$548' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [79] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$649' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [84] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$549' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [80] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$650' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [85] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$550' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [81] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$651' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [86] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$551' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [82] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$652' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [87] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$552' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [83] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$653' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [88] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$553' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [84] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$654' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [89] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$554' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [85] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$655' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [90] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$555' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [86] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$656' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [91] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$556' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [87] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$657' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [92] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$557' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [88] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$658' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [93] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$558' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [89] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$659' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [94] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$559' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [90] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$660' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$8.$11\buffer[95:0] [95] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$560' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [91] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$561' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [92] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$562' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [93] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$563' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [94] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$564' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$8.buffer [95] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$693' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [24] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$694' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [25] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$695' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [26] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$696' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [27] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$697' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [28] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$698' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [29] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$699' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [30] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$700' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [31] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$701' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [32] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$702' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [33] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$703' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [34] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$704' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [35] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$705' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [36] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$706' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [37] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$707' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [38] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$708' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [39] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$709' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [40] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$710' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [41] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$711' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [42] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$712' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [43] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$713' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [44] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$714' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [45] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$715' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [46] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$716' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [47] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$717' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [48] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$718' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [49] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$719' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [50] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$720' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [51] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$721' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [52] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$722' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [53] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$723' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [54] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$724' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [55] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$725' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [56] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$726' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [57] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$727' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [58] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$728' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [59] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$729' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [60] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$730' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [61] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$731' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [62] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$732' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [63] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$733' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [64] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$734' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [65] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$735' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [66] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$736' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [67] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$737' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [68] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$738' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [69] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$739' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [70] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$740' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [71] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$741' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [72] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$742' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [73] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$743' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [74] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$744' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [75] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$745' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [76] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$746' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [77] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$747' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [78] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$748' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [79] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$749' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [80] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$750' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [81] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$751' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [82] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$752' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [83] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$753' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [84] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$754' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [85] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$755' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [86] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$756' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$12\buffer[95:0] [87] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$885' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [32] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$886' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [33] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$887' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [34] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$888' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [35] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$889' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [36] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$789' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [32] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$890' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [37] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$790' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [33] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$891' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [38] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$791' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [34] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$892' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [39] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$792' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [35] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$893' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [40] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$793' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [36] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$894' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [41] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$794' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [37] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$895' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [42] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$795' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [38] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$896' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [43] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$796' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [39] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$897' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [44] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$797' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [40] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$898' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [45] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$798' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [41] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$899' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [46] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$799' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [42] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$900' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [47] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$800' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [43] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$901' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [48] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$801' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [44] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$902' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [49] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$802' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [45] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$903' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [50] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$803' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [46] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$904' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [51] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$804' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [47] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$905' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [52] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$805' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [48] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$906' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [53] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$806' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [49] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$907' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [54] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$807' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [50] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$908' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [55] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$808' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [51] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$909' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [56] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$809' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [52] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$910' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [57] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$810' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [53] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$911' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [58] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$811' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [54] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$912' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [59] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$812' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [55] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$913' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [60] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$813' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [56] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$914' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [61] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$814' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [57] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$915' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [62] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$815' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [58] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$916' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [63] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$816' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [59] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$917' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [64] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$817' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [60] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$918' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [65] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$818' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [61] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$919' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [66] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$819' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [62] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$920' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [67] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$820' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [63] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$921' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [68] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$821' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [64] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$922' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [69] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$822' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [65] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$923' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [70] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$823' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [66] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$924' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [71] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$824' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [67] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$925' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [72] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$825' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [68] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$926' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [73] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$826' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [69] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$927' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [74] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$827' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [70] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$928' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [75] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$828' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [71] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$929' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [76] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$829' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [72] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$930' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [77] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$830' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [73] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$931' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [78] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$831' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [74] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$932' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [79] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$832' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [75] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$933' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [80] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$833' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [76] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$934' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [81] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$834' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [77] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$935' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [82] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$835' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [78] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$936' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [83] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$836' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [79] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$937' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [84] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$837' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [80] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$938' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [85] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$838' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [81] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$939' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [86] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$839' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [82] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$940' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [87] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$840' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [83] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$941' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [88] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$841' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [84] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$942' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [89] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$842' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [85] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$943' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [90] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$843' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [86] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$944' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [91] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$844' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [87] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$945' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [92] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$845' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [88] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$946' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [93] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$846' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [89] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$947' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [94] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$847' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [90] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$948' (xx?) in module `\selector' with constant driver `$techmap$shiftx$../Selector/selector4.v:45$5.$11\buffer[95:0] [95] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$848' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [91] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$849' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [92] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$850' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [93] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$851' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [94] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$852' (xx?) in module `\selector' with constant driver `$shiftx$../Selector/selector4.v:45$5.buffer [95] = 1'x'.

10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Finding identical cells in module `\nm2'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1063' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1180'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1061 [1] = $techmap$techmap$ge$../nm2/nm2.v:53$16.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:222$1097_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1063' from module `\nm2'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1053' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1169'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1051 [1] = $techmap$techmap$ge$../nm2/nm2.v:29$13.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:222$1097_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1053' from module `\nm2'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1038' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1163'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1036 [1] = $techmap$techmap$ge$../nm2/nm2.v:22$12.$auto$alumacc.cc:470:replace_alu$954.lcu.$and$<techmap.v>:222$1097_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1038' from module `\nm2'.
Finding identical cells in module `\selector'.
Finding identical cells in module `\selector4'.
Removed a total of 3 cells.

10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nibble_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \nm2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \selector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \selector4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nibble_top.
  Optimizing cells in module \nm2.
  Optimizing cells in module \selector.
  Optimizing cells in module \selector4.
Performed a total of 0 changes.

10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Finding identical cells in module `\nm2'.
Finding identical cells in module `\selector'.
Finding identical cells in module `\selector4'.
Removed a total of 0 cells.

10.6. Executing OPT_RMDFF pass (remove dff with constant values).

10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..
Finding unused cells or wires in module \nm2..
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1114'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1112'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1113'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1069'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1068'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1070'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1071'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1134'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1133'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1135'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1136'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1157'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1162'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1170'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1175'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1181'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1186'.
Finding unused cells or wires in module \selector..
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$403'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$404'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$401'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$402'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$399'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$400'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$397'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$398'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$395'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$396'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$393'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$394'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$391'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$392'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$389'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$390'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$473'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$474'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$475'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$476'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$477'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$478'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$479'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$480'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$481'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$482'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$483'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$484'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$485'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$486'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$487'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$488'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$489'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$490'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$491'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$492'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$493'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$494'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$495'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$496'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$497'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$498'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$499'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$500'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$573'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$574'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$575'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$576'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$577'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$578'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$579'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$580'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$581'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$582'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$583'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$584'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$585'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$586'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$587'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$588'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$589'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$590'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$591'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$592'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$593'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$594'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$595'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$596'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$677'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$678'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$679'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$680'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$681'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$682'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$683'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$684'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$685'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$686'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$687'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$688'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$689'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$690'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$691'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$692'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$761'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$762'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$763'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$764'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$765'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$766'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$767'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$768'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$769'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$770'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$771'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$772'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$773'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$774'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$775'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$776'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$777'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$778'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$779'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$780'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$781'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$782'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$783'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$784'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$785'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$786'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$787'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$788'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$861'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$862'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$863'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$864'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$865'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$866'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$867'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$868'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$869'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$870'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$871'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$872'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$873'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$874'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$875'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$876'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$877'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$878'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$879'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$880'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$881'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$882'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$883'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$884'.
Finding unused cells or wires in module \selector4..

10.8. Executing OPT_EXPR pass (perform const folding).

10.9. Rerunning OPT passes. (Maybe there is more to do..)

10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nibble_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \nm2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \selector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \selector4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nibble_top.
  Optimizing cells in module \nm2.
  Optimizing cells in module \selector.
  Optimizing cells in module \selector4.
Performed a total of 0 changes.

10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Finding identical cells in module `\nm2'.
Finding identical cells in module `\selector'.
Finding identical cells in module `\selector4'.
Removed a total of 0 cells.

10.13. Executing OPT_RMDFF pass (remove dff with constant values).

10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..
Finding unused cells or wires in module \nm2..
Finding unused cells or wires in module \selector..
Finding unused cells or wires in module \selector4..

10.15. Executing OPT_EXPR pass (perform const folding).

10.16. Finished OPT passes. (There is nothing left to do.)

11. Executing FLATTEN pass (flatten design).
Mapping nibble_top.logica_seleccion using selector4.
Mapping nibble_top.nibble_mayor using nm2.
Mapping nibble_top.logica_seleccion.selectores[3].seli using selector.
Mapping nibble_top.logica_seleccion.selectores[2].seli using selector.
Mapping nibble_top.logica_seleccion.selectores[0].seli using selector.
Mapping nibble_top.logica_seleccion.selectores[1].seli using selector.
No more expansions possible.
Deleting now unused module nm2.
Deleting now unused module selector.
Deleting now unused module selector4.

12. Executing OPT pass (performing simple optimizations).

12.1. Executing OPT_EXPR pass (perform const folding).

12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Removed a total of 0 cells.

12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nibble_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nibble_top.
Performed a total of 0 changes.

12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Removed a total of 0 cells.

12.6. Executing OPT_RMDFF pass (remove dff with constant values).

12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..
  removing unused `$_DFF_P_' cell `$techmap\nibble_mayor.$auto$simplemap.cc:420:simplemap_dff$1015'.
  removing unused `$_DFF_P_' cell `$techmap\nibble_mayor.$auto$simplemap.cc:420:simplemap_dff$1016'.
  removing unused `$_NOT_' cell `$techmap\nibble_mayor.$auto$simplemap.cc:277:simplemap_mux$997'.
  removing unused `$_NOT_' cell `$techmap\nibble_mayor.$auto$simplemap.cc:277:simplemap_mux$991'.
  removing unused `$_MUX_' cell `$techmap\nibble_mayor.$auto$simplemap.cc:277:simplemap_mux$982'.
  removing unused `$_MUX_' cell `$techmap\nibble_mayor.$auto$simplemap.cc:277:simplemap_mux$981'.
  removing unused `$_NOT_' cell `$techmap\nibble_mayor.$auto$simplemap.cc:277:simplemap_mux$980'.
  removing unused `$_MUX_' cell `$techmap\nibble_mayor.$auto$simplemap.cc:277:simplemap_mux$979'.
  removing unused non-port wire \nibble_mayor.id2.
  removing unused non-port wire \nibble_mayor.id1.
  removing unused non-port wire \nibble_mayor.ID_MAYOR.
  removed 3 unused temporary wires.

12.8. Executing OPT_EXPR pass (perform const folding).

12.9. Rerunning OPT passes. (Maybe there is more to do..)

12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nibble_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nibble_top.
Performed a total of 0 changes.

12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Removed a total of 0 cells.

12.13. Executing OPT_RMDFF pass (remove dff with constant values).

12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..

12.15. Executing OPT_EXPR pass (perform const folding).

12.16. Finished OPT passes. (There is nothing left to do.)

13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..
  removing unused non-port wire \logica_seleccion.CLK.
  removing unused non-port wire \logica_seleccion.DATA_A.
  removing unused non-port wire \logica_seleccion.DATA_B.
  removing unused non-port wire \logica_seleccion.NIBBLES.
  removing unused non-port wire \logica_seleccion.RESET_L.
  removing unused non-port wire \logica_seleccion.SEL_A.
  removing unused non-port wire \logica_seleccion.SEL_AB.
  removing unused non-port wire \logica_seleccion.SEL_B.
  removing unused non-port wire \logica_seleccion.selectores[0].seli.clk.
  removing unused non-port wire \logica_seleccion.selectores[0].seli.dataA.
  removing unused non-port wire \logica_seleccion.selectores[0].seli.dataB.
  removing unused non-port wire \logica_seleccion.selectores[0].seli.nibbleOut.
  removing unused non-port wire \logica_seleccion.selectores[0].seli.reset_L.
  removing unused non-port wire \logica_seleccion.selectores[0].seli.sel.
  removing unused non-port wire \logica_seleccion.selectores[0].seli.selA.
  removing unused non-port wire \logica_seleccion.selectores[0].seli.selB.
  removing unused non-port wire \logica_seleccion.selectores[1].seli.clk.
  removing unused non-port wire \logica_seleccion.selectores[1].seli.dataA.
  removing unused non-port wire \logica_seleccion.selectores[1].seli.dataB.
  removing unused non-port wire \logica_seleccion.selectores[1].seli.nibbleOut.
  removing unused non-port wire \logica_seleccion.selectores[1].seli.reset_L.
  removing unused non-port wire \logica_seleccion.selectores[1].seli.sel.
  removing unused non-port wire \logica_seleccion.selectores[1].seli.selA.
  removing unused non-port wire \logica_seleccion.selectores[1].seli.selB.
  removing unused non-port wire \logica_seleccion.selectores[2].seli.clk.
  removing unused non-port wire \logica_seleccion.selectores[2].seli.dataA.
  removing unused non-port wire \logica_seleccion.selectores[2].seli.dataB.
  removing unused non-port wire \logica_seleccion.selectores[2].seli.nibbleOut.
  removing unused non-port wire \logica_seleccion.selectores[2].seli.reset_L.
  removing unused non-port wire \logica_seleccion.selectores[2].seli.sel.
  removing unused non-port wire \logica_seleccion.selectores[2].seli.selA.
  removing unused non-port wire \logica_seleccion.selectores[2].seli.selB.
  removing unused non-port wire \logica_seleccion.selectores[3].seli.clk.
  removing unused non-port wire \logica_seleccion.selectores[3].seli.dataA.
  removing unused non-port wire \logica_seleccion.selectores[3].seli.dataB.
  removing unused non-port wire \logica_seleccion.selectores[3].seli.nibbleOut.
  removing unused non-port wire \logica_seleccion.selectores[3].seli.reset_L.
  removing unused non-port wire \logica_seleccion.selectores[3].seli.sel.
  removing unused non-port wire \logica_seleccion.selectores[3].seli.selA.
  removing unused non-port wire \logica_seleccion.selectores[3].seli.selB.
  removing unused non-port wire \nibble_mayor.CLK.
  removing unused non-port wire \nibble_mayor.NIBBLES.
  removing unused non-port wire \nibble_mayor.NIBBLE_MAYOR.
  removing unused non-port wire \nibble_mayor.RESET_L.
  removed 44 unused temporary wires.

14. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=176.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\nibble_top':
  mapped 40 $_DFF_P_ cells to \DFFPOSX1 cells.

15. Executing OPT pass (performing simple optimizations).

15.1. Executing OPT_EXPR pass (perform const folding).

15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Removed a total of 0 cells.

15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \nibble_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \nibble_top.
Performed a total of 0 changes.

15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\nibble_top'.
Removed a total of 0 cells.

15.6. Executing OPT_RMDFF pass (remove dff with constant values).

15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \nibble_top..

15.8. Executing OPT_EXPR pass (perform const folding).

15.9. Finished OPT passes. (There is nothing left to do.)

16. Executing ABC pass (technology mapping using ABC).

16.1. Extracting gate netlist of module `\nibble_top' to `<abc-temp-dir>/input.blif'..
Extracted 378 gates and 508 wires to a netlist network with 129 inputs and 40 outputs.

16.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gianca/Documents/UCR/IE-0411/P1/RTL/ProyectoMicros/Nibble/../libs/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/gianca/Documents/UCR/IE-0411/P1/RTL/ProyectoMicros/Nibble/../libs/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gianca/Documents/UCR/IE-0411/P1/RTL/ProyectoMicros/Nibble/nibble.constr 
ABC: Directive set_driving_cell should be followed by two arguments.
ABC: Directive set_load should be followed by two arguments.
ABC: + strash 
ABC: + dc2 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -o -D 10000 
ABC: + strash 
ABC: + dch -f 
ABC: + map -D 10000 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (1408.79 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    543 ( 15.1 %)   Cap = 32.0 ff (  0.5 %)   Area =    14077.00 ( 98.2 %)   Delay =  1409.21 ps  (  3.3 %)               
ABC: Path  0 --     103 : 0    3 pi      A =   0.00  Df =   0.0   -0.0 ps  S =   0.0 ps  Cin =  0.0 ff  Cout =  61.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     675 : 2    1 XOR2X1  A =  56.00  Df =  99.2  -14.3 ps  S =  66.2 ps  Cin = 31.9 ff  Cout =   9.3 ff  Cmax = 484.4 ff  G =   29  
ABC: Path  2 --     676 : 1    2 INVX1   A =  16.00  Df = 173.8   -9.6 ps  S =  82.2 ps  Cin =  9.3 ff  Cout =  30.9 ff  Cmax = 503.8 ff  G =  328  
ABC: Path  3 --     685 : 2    1 AND2X2  A =  32.00  Df = 274.7  -26.0 ps  S =  40.7 ps  Cin = 12.6 ff  Cout =  12.9 ff  Cmax = 975.6 ff  G =  102  
ABC: Path  4 --     686 : 3    1 OAI21X1 A =  23.00  Df = 328.7  -33.5 ps  S =  69.8 ps  Cin = 16.1 ff  Cout =  12.9 ff  Cmax = 494.9 ff  G =   80  
ABC: Path  5 --     687 : 2    5 NAND2X1 A =  24.00  Df = 485.1  -11.1 ps  S = 236.4 ps  Cin = 12.6 ff  Cout =  91.1 ff  Cmax = 499.8 ff  G =  713  
ABC: Path  6 --     688 : 3    1 MUX2X1  A =  48.00  Df = 640.6  -14.9 ps  S =  76.3 ps  Cin = 18.3 ff  Cout =  15.1 ff  Cmax = 489.0 ff  G =   82  
ABC: Path  7 --     689 : 2    3 OR2X2   A =  32.00  Df = 775.3  -18.8 ps  S =  79.5 ps  Cin = 14.6 ff  Cout =  49.8 ff  Cmax = 966.5 ff  G =  338  
ABC: Path  8 --     711 : 3    1 MUX2X1  A =  48.00  Df =1409.2  -22.6 ps  S =  44.9 ps  Cin = 18.3 ff  Cout =   0.0 ff  Cmax = 489.0 ff  G =    0  
ABC: Start-point = pi102.  End-point = po38.
ABC: + write_blif <abc-temp-dir>/output.blif 

16.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       21
ABC RESULTS:           AOI21X1 cells:      130
ABC RESULTS:           AOI22X1 cells:        2
ABC RESULTS:             BUFX2 cells:       12
ABC RESULTS:             INVX1 cells:       60
ABC RESULTS:             INVX2 cells:       10
ABC RESULTS:            MUX2X1 cells:        7
ABC RESULTS:           NAND2X1 cells:       44
ABC RESULTS:           NAND3X1 cells:       16
ABC RESULTS:            NOR2X1 cells:       28
ABC RESULTS:           OAI21X1 cells:      203
ABC RESULTS:           OAI22X1 cells:        4
ABC RESULTS:             OR2X2 cells:        2
ABC RESULTS:           XNOR2X1 cells:        3
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:      339
ABC RESULTS:           input signals:      129
ABC RESULTS:          output signals:       40
Removing temp directory.

17. Printing statistics.

=== nibble_top ===

   Number of wires:                782
   Number of wire bits:           4047
   Number of public wires:          16
   Number of public wire bits:     142
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                583
     AND2X2                         21
     AOI21X1                       130
     AOI22X1                         2
     BUFX2                          12
     DFFPOSX1                       40
     INVX1                          60
     INVX2                          10
     MUX2X1                          7
     NAND2X1                        44
     NAND3X1                        16
     NOR2X1                         28
     OAI21X1                       203
     OAI22X1                         4
     OR2X2                           2
     XNOR2X1                         3
     XOR2X1                          1

   Chip area for this module: 17917.000000

Removed 0 unused cells and 228 unused wires.

18. Executing Verilog backend.
Dumping module `\nibble_top'.

End of script. Logfile hash: 15a5474414
CPU: user 0.64s system 0.02s, MEM: 51.83 MB total, 14.16 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 5.4.0-6ubuntu1~16.04.4 -O2 -fstack-protector-strong -fPIC -Os)
Time spent: 19% 17x opt_expr (0 sec), 16% 16x opt_merge (0 sec), ...
